<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vector.music.mapper.CollectMapper">
    <resultMap id="BaseResultMap" type="com.vector.music.pojo.Collect">
        <id column="id" property="id"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="user_id" property="userId"/>
        <result column="type" property="type"/>
        <result column="song_id" jdbcType="INTEGER" property="songId"/>
        <result column="song_list_id" jdbcType="INTEGER" property="songListId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,user_id,type,song_id,song_list_id,create_time,update_time
    </sql>
    <insert id="insert" parameterType="com.vector.music.pojo.Collect">
        insert into collect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="songId != null">
                song_id,
            </if>
            <if test="songListId != null">
                song_list_id,
            </if>
        </trim>
        <trim prefix=" values(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="songId != null">
                #{songId},
            </if>
            <if test="songListId != null">
                #{songListId},
            </if>
        </trim>
    </insert>

    <update id="delete" parameterType="java.lang.Integer">
        update collect
        <set>
            is_delete=1
        </set>
        where id = #{id} and 1=1
    </update>

    <update id="deleteByUserIdSongId">
        update collect
        <set>
            is_delete=1
        </set>
        where user_id = #{userId} and song_id = #{songId} and is_delete=0 and 1=1
    </update>

    <select id="allCollect" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from collect where is_delete=0 and 1=1
    </select>

    <select id="collectOfUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from collect
        where user_id = #{userId} and is_delete=0 and 1=1
    </select>

    <select id="existOfSongId" resultType="java.lang.Integer">
        select count(*)
        from collect
        where user_id = #{userId} and song_id = #{songId} and is_delete=0 and 1=1
    </select>
</mapper>
